{"ast":null,"code":"var _jsxFileName = \"/Users/emilyyu415/Downloads/cv website \\uD83E\\uDDCA/my-cv-website/src/components/experience/experience.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"../../fonts.css\";\nimport \"./experience.css\";\nimport ReactSlider from \"react-slider\";\n// import Slider from \"./slider\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  _s();\n  const [slide, setSlide] = useState(null);\n  useEffect(() => {\n    renderSlider(onChange, currIndex);\n  }, []);\n\n  // function renderSlider() {\n  //     const slider = (({currentIndex}) => {\n  //         (\n  //             <ReactSlider\n  //                 className=\"horizontal-slider\"\n  //                 thumbClassName=\"example-thumb\"\n  //                 trackClassName=\"example-track\"\n\n  //                 marks\n  //                 markClassName=\"example-mark\"\n  //                 // onChange={onChange}\n  //                 min={0}\n  //                 man={4}\n  //                 defaultValue={0}\n  //                 value={currentIndex}\n  //                 renderMark={(props) => {\n  //                     if (props.key < currentIndex) {\n  //                         props.className = \"example-mark example-mark-completed\";\n  //                     } else {\n  //                         props.className = \"example-mark example-mark-active\";\n  //                     }\n\n  //                     return <span {...props}/>;\n  //                 }}\n  //                 >\n  //             </ReactSlider>\n  //         )\n  //     });\n\n  //     setSlide(slider);\n  // }\n\n  const [currIndex, setCurrIndex] = useState(0);\n  const changeIndex = index => {\n    setCurrIndex(index);\n  };\n  function renderSlider(onChange, currIndex) {\n    const Slider = ({\n      onChange,\n      currIndex\n    }) => {\n      /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: \"horizontal-slider\",\n        thumbClassName: \"example-thumb\",\n        trackClassName: \"example-track\",\n        marks: true,\n        markClassName: \"example-mark\",\n        onChange: onChange,\n        min: 0,\n        man: 4,\n        defaultValue: 0,\n        value: currIndex,\n        renderMark: props => {\n          if (props.key < currIndex) {\n            props.className = \"example-mark example-mark-completed\";\n          } else {\n            props.className = \"example-mark example-mark-active\";\n          }\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 32\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    };\n    setSlide(Slider);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursive\",\n        children: \"M\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pixel\",\n        children: \"Y EXPERIENCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), Slide(changeIndex, currIndex)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(Experience, \"f3oozd0eVG6JakGNWWG/rPOe328=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useState","useEffect","ReactSlider","jsxDEV","_jsxDEV","Experience","_s","slide","setSlide","renderSlider","onChange","currIndex","setCurrIndex","changeIndex","index","Slider","className","thumbClassName","trackClassName","marks","markClassName","min","man","defaultValue","value","renderMark","props","key","fileName","_jsxFileName","lineNumber","columnNumber","children","Slide","_c","$RefreshReg$"],"sources":["/Users/emilyyu415/Downloads/cv website ðŸ§Š/my-cv-website/src/components/experience/experience.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../../fonts.css\";\nimport \"./experience.css\";\nimport ReactSlider from \"react-slider\";\n// import Slider from \"./slider\"\n\nconst Experience = (() => {\n    const [slide, setSlide] = useState(null);\n\n    useEffect(() => {\n        renderSlider(onChange, currIndex);\n    }, [])\n\n    // function renderSlider() {\n    //     const slider = (({currentIndex}) => {\n    //         (\n    //             <ReactSlider\n    //                 className=\"horizontal-slider\"\n    //                 thumbClassName=\"example-thumb\"\n    //                 trackClassName=\"example-track\"\n    \n    //                 marks\n    //                 markClassName=\"example-mark\"\n    //                 // onChange={onChange}\n    //                 min={0}\n    //                 man={4}\n    //                 defaultValue={0}\n    //                 value={currentIndex}\n    //                 renderMark={(props) => {\n    //                     if (props.key < currentIndex) {\n    //                         props.className = \"example-mark example-mark-completed\";\n    //                     } else {\n    //                         props.className = \"example-mark example-mark-active\";\n    //                     }\n    \n    //                     return <span {...props}/>;\n    //                 }}\n    //                 >\n    //             </ReactSlider>\n    //         )\n    //     });\n\n    //     setSlide(slider);\n    // }\n\n    const [currIndex, setCurrIndex] = useState(0);\n\n    const changeIndex = (index) => {\n        setCurrIndex(index)\n    };\n\n    function renderSlider(onChange, currIndex) {\n        const Slider = (({onChange, currIndex}) => {\n            (\n                <ReactSlider\n                    className=\"horizontal-slider\"\n                    thumbClassName=\"example-thumb\"\n                    trackClassName=\"example-track\"\n        \n                    marks\n                    markClassName=\"example-mark\"\n                    onChange={onChange}\n                    min={0}\n                    man={4}\n                    defaultValue={0}\n                    value={currIndex}\n                    renderMark={(props) => {\n                        if (props.key < currIndex) {\n                            props.className = \"example-mark example-mark-completed\";\n                        } else {\n                            props.className = \"example-mark example-mark-active\";\n                        }\n        \n                        return <span {...props}/>;\n                    }}\n                    >\n                </ReactSlider>\n            )\n        });\n\n        setSlide(Slider)\n    }\n\n    return (\n        <div className=\"experience\">\n            <h1>\n                <span className=\"cursive\">M</span><span className=\"pixel\">Y EXPERIENCE</span>\n            </h1>\n\n            {/* {slide} */}\n            {/* <Slider \n                onChange={changeIndex}\n                currentIndex={currIndex}\n                /> */}\n\n            {Slide(changeIndex, currIndex)}\n\n        </div>\n    )\n});\n\nexport default Experience;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,iBAAiB;AACxB,OAAO,kBAAkB;AACzB,OAAOC,WAAW,MAAM,cAAc;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZQ,YAAY,CAACC,QAAQ,EAAEC,SAAS,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAM,CAACA,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMa,WAAW,GAAIC,KAAK,IAAK;IAC3BF,YAAY,CAACE,KAAK,CAAC;EACvB,CAAC;EAED,SAASL,YAAYA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IACvC,MAAMI,MAAM,GAAIA,CAAC;MAACL,QAAQ;MAAEC;IAAS,CAAC,KAAK;MACvC,aACIP,OAAA,CAACF,WAAW;QACRc,SAAS,EAAC,mBAAmB;QAC7BC,cAAc,EAAC,eAAe;QAC9BC,cAAc,EAAC,eAAe;QAE9BC,KAAK;QACLC,aAAa,EAAC,cAAc;QAC5BV,QAAQ,EAAEA,QAAS;QACnBW,GAAG,EAAE,CAAE;QACPC,GAAG,EAAE,CAAE;QACPC,YAAY,EAAE,CAAE;QAChBC,KAAK,EAAEb,SAAU;QACjBc,UAAU,EAAGC,KAAK,IAAK;UACnB,IAAIA,KAAK,CAACC,GAAG,GAAGhB,SAAS,EAAE;YACvBe,KAAK,CAACV,SAAS,GAAG,qCAAqC;UAC3D,CAAC,MAAM;YACHU,KAAK,CAACV,SAAS,GAAG,kCAAkC;UACxD;UAEA,oBAAOZ,OAAA;YAAA,GAAUsB;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC7B;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEO,CAAC;IAEtB,CAAE;IAEFvB,QAAQ,CAACO,MAAM,CAAC;EACpB;EAEA,oBACIX,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAgB,QAAA,gBACvB5B,OAAA;MAAA4B,QAAA,gBACI5B,OAAA;QAAMY,SAAS,EAAC,SAAS;QAAAgB,QAAA,EAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAAA3B,OAAA;QAAMY,SAAS,EAAC,OAAO;QAAAgB,QAAA,EAAC;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,EAQJE,KAAK,CAACpB,WAAW,EAAEF,SAAS,CAAC;EAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEd,CAAE;AAACzB,EAAA,CA7FGD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA+FhB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}