{"ast":null,"code":"var _jsxFileName = \"/Users/emilyyu415/Downloads/cv website \\uD83E\\uDDCA/my-cv-website/src/components/experience/experience.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"../../fonts.css\";\nimport \"./experience.css\";\nimport ReactSlider from \"react-slider\";\nimport Typewriter from \"typewriter-effect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  _s();\n  // function renderSlider() {\n  //     const slider = (({currentIndex}) => {\n  //         (\n  //             <ReactSlider\n  //                 className=\"horizontal-slider\"\n  //                 thumbClassName=\"example-thumb\"\n  //                 trackClassName=\"example-track\"\n\n  //                 marks\n  //                 markClassName=\"example-mark\"\n  //                 // onChange={onChange}\n  //                 min={0}\n  //                 man={4}\n  //                 defaultValue={0}\n  //                 value={currentIndex}\n  //                 renderMark={(props) => {\n  //                     if (props.key < currentIndex) {\n  //                         props.className = \"example-mark example-mark-completed\";\n  //                     } else {\n  //                         props.className = \"example-mark example-mark-active\";\n  //                     }\n\n  //                     return <span {...props}/>;\n  //                 }}\n  //                 >\n  //             </ReactSlider>\n  //         )\n  //     });\n\n  //     setSlide(slider);\n  // }\n\n  const [currIndex, setCurrIndex] = useState(0);\n  const [exp, setExp] = useState(0);\n  const changeIndex = index => {\n    setCurrIndex(index);\n  };\n  useEffect(() => {\n    if (currIndex == 1) {\n      const school = /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"2022: CS @ REED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  }, [currIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursive\",\n        children: \"M\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pixel\",\n        children: \"Y EXPERIENCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      className: \"horizontal-slider\",\n      thumbClassName: \"example-thumb\",\n      trackClassName: \"example-track\",\n      marks: true,\n      markClassName: \"example-mark\",\n      onChange: changeIndex,\n      min: 0,\n      max: 3,\n      defaultValue: 0,\n      value: currIndex,\n      renderMark: props => {\n        if (props.key < currIndex) {\n          props.className = \"example-mark example-mark-completed\";\n        } else {\n          props.className = \"example-mark example-mark-active\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pixel\",\n      children: /*#__PURE__*/_jsxDEV(Typewriter, {\n        onInit: typewriter => {\n          typewriter.typeString('tip: slide to view!');\n          typewriter.start();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Experience, \"bH37mUUFHu5tGjmYehKBwH2FADk=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useState","useEffect","ReactSlider","Typewriter","jsxDEV","_jsxDEV","Experience","_s","currIndex","setCurrIndex","exp","setExp","changeIndex","index","school","children","fileName","_jsxFileName","lineNumber","columnNumber","className","thumbClassName","trackClassName","marks","markClassName","onChange","min","max","defaultValue","value","renderMark","props","key","onInit","typewriter","typeString","start","_c","$RefreshReg$"],"sources":["/Users/emilyyu415/Downloads/cv website ðŸ§Š/my-cv-website/src/components/experience/experience.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../../fonts.css\";\nimport \"./experience.css\";\nimport ReactSlider from \"react-slider\";\nimport Typewriter from \"typewriter-effect\";\n\nconst Experience = (() => {\n\n    // function renderSlider() {\n    //     const slider = (({currentIndex}) => {\n    //         (\n    //             <ReactSlider\n    //                 className=\"horizontal-slider\"\n    //                 thumbClassName=\"example-thumb\"\n    //                 trackClassName=\"example-track\"\n    \n    //                 marks\n    //                 markClassName=\"example-mark\"\n    //                 // onChange={onChange}\n    //                 min={0}\n    //                 man={4}\n    //                 defaultValue={0}\n    //                 value={currentIndex}\n    //                 renderMark={(props) => {\n    //                     if (props.key < currentIndex) {\n    //                         props.className = \"example-mark example-mark-completed\";\n    //                     } else {\n    //                         props.className = \"example-mark example-mark-active\";\n    //                     }\n    \n    //                     return <span {...props}/>;\n    //                 }}\n    //                 >\n    //             </ReactSlider>\n    //         )\n    //     });\n\n    //     setSlide(slider);\n    // }\n\n    const [currIndex, setCurrIndex] = useState(0);\n    const [exp, setExp] = useState(0);\n\n    const changeIndex = (index) => {\n        setCurrIndex(index)\n    };\n\n    useEffect(() => {\n        if (currIndex == 1) {\n            const school = (\n                <h2>2022: CS @ REED</h2>\n            )\n        }\n\n    }, [currIndex])\n\n    return (\n        <div className=\"experience\">\n            <h1>\n                <span className=\"cursive\">M</span><span className=\"pixel\">Y EXPERIENCE</span>\n            </h1>\n\n            <ReactSlider\n                className=\"horizontal-slider\"\n                thumbClassName=\"example-thumb\"\n                trackClassName=\"example-track\"\n\n                marks\n                markClassName=\"example-mark\"\n                onChange={changeIndex}\n                min={0}\n                max={3}\n                defaultValue={0}\n                value={currIndex}\n                renderMark={(props) => {\n                    if (props.key < currIndex) {\n                        props.className = \"example-mark example-mark-completed\";\n                    } else {\n                        props.className = \"example-mark example-mark-active\";\n                    }\n\n                    return <span {...props}/>;\n                }}\n                >\n            </ReactSlider>\n            \n            <div className=\"pixel\">\n                <Typewriter\n                        onInit={(typewriter) => {\n                            typewriter.typeString('tip: slide to view!');\n                            typewriter.start()\n                        }}>\n                </Typewriter>\n\n        </div>\n\n        </div>\n    )\n});\n\nexport default Experience;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}